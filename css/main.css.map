{"version":3,"sources":["base/_typography.scss","base/_layout.scss","abstracts/_responsive.scss","abstracts/_breakpoints.scss","base/_reset.scss","components/_navigation.scss","abstracts/_variables.scss"],"names":[],"mappings":"AAAA,sGAAY;AACZ,iGAAY;ACDZ,sGAAY;ACAZ;EACI,WAAU;EACV,kBAAkB;EAClB,mBAAmB;EACnB,iBAAiB;EACjB,kBAAkB,EAAA;;ACMd;EDHJ;IACI,gBACJ,EAAA,EAAC;;AEVL;EACI,eAAc,EAAA;;AJqBd;EACI,2BAA8B,EAAA;;AADlC;EACI,2BAA8B,EAAA;;AADlC;EACI,2BAA8B,EAAA;;AADlC;EACI,2BAA8B,EAAA;;AADlC;EACI,2BAA8B,EAAA;;AKvBtC;EACI,kBAAiB;EACjB,MAAK;EACL,OAAM;EACN,WAAU;EACV,UAAS,EAAA;;AAEb;EAEQ,8BAA6B;EAC7B,aAAY,EAAA;EAHpB;IAMgB,WAAU;IACV,eAAc;IACd,WAAU;IACV,qBAAoB;IACpB,gBLFO,EAAA;;AKQvB;EAEQ,QAAQ;EACR,mCAA2B;UAA3B,2BAA2B;EAC3B,YAAY,EAAA;;AAGpB;EACI,aAAY,EAAA;;AAEhB;EAGQ,WCpCG,EAAA;;ADiCX;EAOgB,WCxCL,EAAA;;ADiCX;EAcY,cAAa;EACb,eAAc,EAAA;;AAf1B;EAkBY,gBAAe,EAAA;;AAI3B;EAEQ,eAAc;EACd,gBL3Ce;EK4Cf,mBAAkB,EAAA;;AAJ1B;EAOQ,eAAc;EACd,gBLhDe;EKiDf,mBAAkB;EAClB,gBAAe;EACf,0CLvD4C,EAAA;;AK2DpD;EAEQ,WCvEG;EDwEH,eAAc;EACd,mBAAkB,EAAA;;AJzE1B;EACG,uCAAuC;EACvC,gBDWqB;ECVrB,gBAAe,EAAA;;AAGlB;EACI,mBAAkB;EAClB,eAAc,EAAA;EAFlB;IKCI,yBAD0D;IAM1D,2FAAmE;IAAnE,6DAAmE;IACnE,sHAAsJ;ILDlJ,kBAAiB;IACb,kBAAiB;IACjB,WAAU;IACV,qBAAoB;IACpB,gBDJU,EAAA;ECNtB;IAcQ,eAAc;IACd,0CDX4C;ICY5C,gBDRe,EAAA;ECRvB;IAmBQ,sBAAqB,EAAA","file":"main.css","sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@300;400;500;700&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@400;600&display=swap');\r\n$font-base-size:16px;\r\n$font-size-1:70px;\r\n$font-size-2:50px;\r\n$font-size-3:40px;\r\n$font-size-4:20px;\r\n$font-size-4:18px;\r\n$font-size-small:14px;\r\n\r\n$font-base-family:'Noto Sans JP', sans-serif;\r\n$font-secondary-family:'Source Sans Pro', sans-serif;\r\n\r\n$font-weight-light:300 !default;\r\n$font-weight-regular:400 !default;\r\n$font-weight-medium:500 !default;\r\n$font-weight-semibold:600 !default;\r\n$font-weight-bold:700 !default;\r\n$font-weight: () !default;\r\n$font-weight: map-merge( (   \"300\": $font-weight-light, \"400\": $font-weight-regular, \"500\": $font-weight-medium,\"600\": $font-weight-semibold, \"700\": $font-weight-bold, ), $font-weight);\r\n@each $key,\r\n$value in $font-weight {\r\n    .fw-#{$key} { \r\n        font-weight: $value !important;\r\n    }\r\n}\r\n\r\n$font-weight-base: $font-weight-regular;","@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@300;400;500;700&display=swap');\r\nbody{\r\n   font-family: 'Noto Sans JP', sans-serif;\r\n   font-weight:$font-weight-regular; \r\n   line-height:1.5;\r\n \r\n}\r\n.teaser-announcements{\r\n    background:#F7F7F7;\r\n    padding:20px 0;\r\n    .title{\r\n        span{\r\n            @include prime-gradient();\r\n        border-radius:5px;\r\n            padding:10px 25px;\r\n            color:#fff;\r\n            display:inline-block;\r\n            font-weight:$font-weight-light\r\n        }\r\n    }\r\n    .listing {\r\n        font-size:18px;\r\n        font-family:$font-secondary-family;\r\n        font-weight:$font-weight-medium;\r\n    }\r\n    .date{\r\n        padding:0 45px 0 20px;\r\n    }\r\n}",".container-small{\r\n    width:100%;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n}\r\n@include respond-above(md){\r\n    .container-small{ \r\n        max-width:700px\r\n    }\r\n}\r\n","$breakpoints: ( xs: 576px, sm: 768px, md: 992px, lg: 1024px, xl: 1200px);\r\n//\r\n//  RESPOND ABOVE\r\n//––––––––––––––––––––––––––––––––––––––––––––––––––\r\n// @include respond-above(sm) {}\r\n@mixin respond-above($breakpoint) {\r\n    // If the breakpoint exists in the map.\r\n    @if map-has-key($breakpoints, $breakpoint) {\r\n        // Get the breakpoint value.\r\n        $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n        // Write the media query.\r\n        @media (min-width: $breakpoint-value) {\r\n            @content;\r\n        }\r\n        // If the breakpoint doesn't exist in the map.\r\n    }\r\n    @else {\r\n        // Log a warning.\r\n        @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n    }\r\n}\r\n\r\n//\r\n//  RESPOND BELOW\r\n//––––––––––––––––––––––––––––––––––––––––––––––––––\r\n// @include respond-below(sm) {}\r\n@mixin respond-below($breakpoint) {\r\n    // If the breakpoint exists in the map.\r\n    @if map-has-key($breakpoints, $breakpoint) {\r\n        // Get the breakpoint value.\r\n        $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n        // Write the media query.\r\n        @media (max-width: ($breakpoint-value - 1)) {\r\n            @content;\r\n        }\r\n        // If the breakpoint doesn't exist in the map.\r\n    }\r\n    @else {\r\n        // Log a warning.\r\n        @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n    }\r\n}\r\n\r\n//\r\n//  RESPOND BETWEEN\r\n//––––––––––––––––––––––––––––––––––––––––––––––––––\r\n// @include respond-between(sm, md) {}\r\n@mixin respond-between($lower, $upper) {\r\n    // If both the lower and upper breakpoints exist in the map.\r\n    @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {\r\n        // Get the lower and upper breakpoints.\r\n        $lower-breakpoint: map-get($breakpoints, $lower);\r\n        $upper-breakpoint: map-get($breakpoints, $upper);\r\n        // Write the media query.\r\n        @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {\r\n            @content;\r\n        }\r\n        // If one or both of the breakpoints don't exist.\r\n    }\r\n    @else {\r\n        // If lower breakpoint is invalid.\r\n        @if (map-has-key($breakpoints, $lower)==false) {\r\n            // Log a warning.\r\n            @warn 'Your lower breakpoint was invalid: #{$lower}.';\r\n        }\r\n        // If upper breakpoint is invalid.\r\n        @if (map-has-key($breakpoints, $upper)==false) {\r\n            // Log a warning.\r\n            @warn 'Your upper breakpoint was invalid: #{$upper}.';\r\n        }\r\n    }\r\n}","body{\r\n    font-size:16px;\r\n}","header{\r\n    position:absolute;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    z-index:1;\r\n}\r\n.navbar{\r\n    &.bg-custom{ \r\n        background:rgba(0, 0, 0, 0.4);\r\n        padding:25px;\r\n        .nav-item{\r\n            a{\r\n                color:#fff;\r\n                padding:0 20px;\r\n                color:#fff;\r\n                display:inline-block;\r\n                font-weight:$font-weight-medium;\r\n            }\r\n        }\r\n    }\r\n    \r\n}\r\n.banner-slider{\r\n    .carousel-caption{\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        bottom: auto;\r\n    }\r\n}\r\n.carousel-item{\r\n    height:800px;\r\n}\r\n.carousel-item{\r\n    &:not(:first-child){\r\n        .carousel-caption{\r\n        color:$black\r\n        }\r\n        .link-more{\r\n            .btn-link{\r\n                color:$black;\r\n                \r\n            }\r\n        }\r\n    }\r\n    &.third{\r\n        .container-small{\r\n            margin-left:0;\r\n            margin-right:0;\r\n        }\r\n        .carousel-caption{\r\n            text-align:left;\r\n        }\r\n    }\r\n}\r\n.carousel-caption{\r\n    h5{\r\n        font-size:38px;\r\n        font-weight:$font-weight-medium;\r\n        margin-bottom:35px;\r\n    }\r\n    p{\r\n        font-size:24px;\r\n        font-weight:$font-weight-medium;\r\n        margin-bottom:35px;\r\n        line-height:1.5;\r\n        font-family:$font-secondary-family;\r\n    }\r\n   \r\n}\r\n.link-more{\r\n    .btn-link{\r\n        color:$white;\r\n        font-size:20px;\r\n        letter-spacing:4px;\r\n    }\r\n}","$black:#000;\r\n$white:#fff;\r\n$primary-color:#5085DC;\r\n\r\n\r\n\r\n \r\n@mixin prime-gradient($startColor: #4f4bca, $endColor: #51a7e6) {\r\n    background-color: $endColor;\r\n    background-image: -moz-linear-gradient(left, $startColor, $endColor); // FF 3.6+\r\n    background-image: -webkit-gradient(linear, 0 0, 100% 0, from($startColor), to($endColor)); // Safari 4+, Chrome 2+\r\n    background-image: -webkit-linear-gradient(left, $startColor, $endColor); // Safari 5.1+, Chrome 10+\r\n    background-image: -o-linear-gradient(left, $startColor, $endColor); // Opera 11.10\r\n    background-image: linear-gradient(to right, $startColor, $endColor); // Standard, IE10\r\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=1); // IE9 and down\r\n  }"]}